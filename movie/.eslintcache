[{"C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\index.js":"1","C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\reportWebVitals.js":"2","C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\App.js":"3","C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\SearchMovie.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":181,"mtime":1613372851217,"results":"8","hashOfConfig":"6"},{"size":2259,"mtime":1614264738025,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1yauy7",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\index.js",[],["20","21"],"C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\reportWebVitals.js",[],"C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\App.js",[],"C:\\Users\\Hp\\Desktop\\Santushti\\movieSearch\\movie\\src\\SearchMovie.js",["22"],"import \"./SearchMovie.css\"\r\nimport React, { useState } from \"react\"\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default function SearchMovie() {\r\n\r\n    const [query, setQuery] = useState('')\r\n    const [array, setArr] = useState([])\r\n    const [statement, setStatement] = useState(false)\r\n    const findMovie = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=c9ef9b62e247c18b62a6338c7d557b3a&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\r\n        console.log(url);\r\n\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        setArr(data.results)\r\n        if(array.length)\r\n        setStatement(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={findMovie}>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <input type=\"text\" placeholder=\"Movie Name\" name=\"moviename\" value={query} onChange={(e) => setQuery(e.target.value)} required></input>\r\n                <button type=\"submit\" className=\"button\">&nbsp;&nbsp; Search &nbsp;&nbsp;</button>\r\n            </form>\r\n            <br />\r\n            {statement && <h1 className=\"search-results\"> Based On Your Search </h1>}\r\n            <div className=\"row padding\">\r\n\r\n                {array.filter(element => element.poster_path).map(element => (\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card\" key={element.id}>\r\n\r\n                            <img className=\"card-image\" src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${element.poster_path}`} />\r\n                            <div className=\"card-body\">\r\n                                <h1 className=\"card-title\">{element.title}</h1>\r\n                                <p className=\"card-text\">Ratings : {element.vote_average}</p>\r\n                                <p className=\"card-text\">Release Date : {element.release_date}</p>\r\n                                <h5 className=\"card-title\">{element.overview}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":43,"column":29,"nodeType":"29","endLine":43,"endColumn":138},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]